This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by ddd configure 3.3.12, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = new-host-2
uname -m = x86_64
uname -r = 2.6.32-504.8.1.el6.x86_64
uname -s = Linux
uname -v = #1 SMP Wed Jan 28 21:11:36 UTC 2015

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/lib64/qt-3.3/bin
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /sbin
PATH: /bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /root/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2064: checking for product name
configure:2070: result: ddd 3.3.12 "Dale Head"
configure:2072: checking for expiration date
configure:2075: result: no
configure:2124: checking build system type
configure:2142: result: x86_64-unknown-linux-gnu
configure:2164: checking host system type
configure:2179: result: x86_64-unknown-linux-gnu
configure:2201: checking target system type
configure:2216: result: x86_64-unknown-linux-gnu
configure:2272: checking for a BSD-compatible install
configure:2328: result: /usr/bin/install -c
configure:2339: checking whether build environment is sane
configure:2382: result: yes
configure:2397: checking for a thread-safe mkdir -p
configure:2436: result: /bin/mkdir -p
configure:2449: checking for gawk
configure:2465: found /bin/gawk
configure:2476: result: gawk
configure:2487: checking whether make sets $(MAKE)
configure:2508: result: yes
configure:2696: checking whether make sets $(MAKE)
configure:2717: result: yes
configure:2730: checking for g77
configure:2760: result: no
configure:2730: checking for fort77
configure:2760: result: no
configure:2730: checking for f77
configure:2760: result: no
configure:2730: checking for f2c
configure:2760: result: no
configure:2771: checking whether ln -s works
configure:2775: result: yes
configure:2786: checking for sh
configure:2804: found /bin/sh
configure:2816: result: /bin/sh
configure:2831: checking for gtar
configure:2847: found /bin/gtar
configure:2858: result: gtar
configure:2873: checking for gm4
configure:2903: result: no
configure:2873: checking for m4
configure:2889: found /usr/bin/m4
configure:2900: result: m4
configure:2915: checking for gsed
configure:2945: result: no
configure:2915: checking for sed
configure:2931: found /bin/sed
configure:2942: result: sed
configure:2957: checking for gdiff
configure:2987: result: no
configure:2957: checking for diff
configure:2973: found /usr/bin/diff
configure:2984: result: diff
configure:2999: checking for gzip
configure:3015: found /bin/gzip
configure:3026: result: gzip
configure:3045: checking for gzip
configure:3061: found /bin/gzip
configure:3072: result: gzip
configure:3094: checking for remsh
configure:3127: result: no
configure:3094: checking for rsh
configure:3127: result: no
configure:3094: checking for on
configure:3127: result: no
configure:3139: checking for lp
configure:3155: found /usr/bin/lp
configure:3166: result: lp
configure:3188: checking for gcore
configure:3204: found /usr/bin/gcore
configure:3215: result: gcore
configure:3235: checking for compface
configure:3265: result: no
configure:3293: checking for xbm2xface.pl
configure:3323: result: no
configure:3293: checking for xbm2xface
configure:3323: result: no
configure:3337: checking for gdb
configure:3353: found /usr/bin/gdb
configure:3364: result: gdb
configure:3395: checking for perl
configure:3411: found /usr/bin/perl
configure:3422: result: perl
configure:3436: checking for perl version greater than or equal to 5.8.0
configure:3449: result: ok
configure:3462: checking for xterm
configure:3492: result: no
configure:3462: checking for kterm
configure:3492: result: no
configure:3462: checking for dtterm
configure:3492: result: no
configure:3462: checking for hpterm
configure:3492: result: no
configure:3504: checking for xfontsel
configure:3534: result: no
configure:3555: checking for a BSD-compatible install
configure:3611: result: /usr/bin/install -c
configure:3626: checking for bison
configure:3642: found /usr/bin/bison
configure:3653: result: bison -y
configure:3665: checking for bison -y flags
configure:3668: result: 
configure:3671: checking bison -y version
configure:3675: result: 2.4.1 (ok)
configure:3699: checking for style of include used by make
configure:3727: result: GNU
configure:3797: checking for gcc
configure:3813: found /usr/bin/gcc
configure:3824: result: gcc
configure:4062: checking for C compiler version
configure:4069: gcc --version >&5
gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:4072: $? = 0
configure:4079: gcc -v >&5
Using built-in specs.
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.4.7 20120313 (Red Hat 4.4.7-11) (GCC) 
configure:4082: $? = 0
configure:4089: gcc -V >&5
gcc: '-V' option must have argument
configure:4092: $? = 1
configure:4115: checking for C compiler default output file name
configure:4142: gcc    conftest.c  >&5
configure:4145: $? = 0
configure:4183: result: a.out
configure:4200: checking whether the C compiler works
configure:4210: ./a.out
configure:4213: $? = 0
configure:4230: result: yes
configure:4237: checking whether we are cross compiling
configure:4239: result: no
configure:4242: checking for suffix of executables
configure:4249: gcc -o conftest    conftest.c  >&5
configure:4252: $? = 0
configure:4276: result: 
configure:4282: checking for suffix of object files
configure:4308: gcc -c   conftest.c >&5
configure:4311: $? = 0
configure:4334: result: o
configure:4338: checking whether we are using the GNU C compiler
configure:4367: gcc -c   conftest.c >&5
configure:4373: $? = 0
configure:4390: result: yes
configure:4395: checking whether gcc accepts -g
configure:4425: gcc -c -g  conftest.c >&5
configure:4431: $? = 0
configure:4530: result: yes
configure:4547: checking for gcc option to accept ISO C89
configure:4621: gcc  -c -g -O2  conftest.c >&5
configure:4627: $? = 0
configure:4650: result: none needed
configure:4670: checking dependency style of gcc
configure:4761: result: gcc3
configure:4781: checking for flex
configure:4797: found /usr/bin/flex
configure:4808: result: flex
configure:4845: flex conftest.l
configure:4848: $? = 0
configure:4850: checking lex output file root
configure:4866: result: lex.yy
configure:4871: checking lex library
configure:4890: gcc -o conftest -g -O2   conftest.c   >&5
/tmp/ccT9oDQX.o: In function `input':
/home/student/CCPP/ddd-3.3.12/lex.yy.c:1168: undefined reference to `yywrap'
/tmp/ccT9oDQX.o: In function `yylex':
/home/student/CCPP/ddd-3.3.12/lex.yy.c:867: undefined reference to `yywrap'
/tmp/ccT9oDQX.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.l:17: undefined reference to `yywrap'
collect2: ld returned 1 exit status
configure:4896: $? = 1
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 35
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| #endif /* ! C99 */
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 468 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| int yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		unsigned n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 1 "conftest.l"
| 
| #line 652 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { yyless (input () != 0); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 7 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 790 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), (size_t) num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register int number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| #ifndef __cplusplus
| extern int isatty (int );
| #endif /* __cplusplus */
|     
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	int num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param bytes the byte buffer to scan
|  * @param len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 9 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:4890: gcc -o conftest -g -O2   conftest.c -lfl  >&5
/usr/bin/ld: cannot find -lfl
collect2: ld returned 1 exit status
configure:4896: $? = 1
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 35
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| #endif /* ! C99 */
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 468 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| int yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		unsigned n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 1 "conftest.l"
| 
| #line 652 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { yyless (input () != 0); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 7 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 790 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), (size_t) num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register int number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| #ifndef __cplusplus
| extern int isatty (int );
| #endif /* __cplusplus */
|     
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	int num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param bytes the byte buffer to scan
|  * @param len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 9 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:4890: gcc -o conftest -g -O2   conftest.c -ll  >&5
/usr/bin/ld: cannot find -ll
collect2: ld returned 1 exit status
configure:4896: $? = 1
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 35
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| #endif /* ! C99 */
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 468 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| int yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		unsigned n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 1 "conftest.l"
| 
| #line 652 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { yyless (input () != 0); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 7 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 790 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), (size_t) num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register int number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| #ifndef __cplusplus
| extern int isatty (int );
| #endif /* __cplusplus */
|     
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	int num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param bytes the byte buffer to scan
|  * @param len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 9 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:4917: result: none needed
configure:4923: checking whether yytext is a pointer
configure:4944: gcc -o conftest -g -O2   conftest.c   >&5
/tmp/ccowyf0P.o: In function `input':
/home/student/CCPP/ddd-3.3.12/lex.yy.c:1168: undefined reference to `yywrap'
/tmp/ccowyf0P.o: In function `yylex':
/home/student/CCPP/ddd-3.3.12/lex.yy.c:867: undefined reference to `yywrap'
/tmp/ccowyf0P.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.l:17: undefined reference to `yywrap'
collect2: ld returned 1 exit status
configure:4950: $? = 1
configure: failed program was:
| #define YYTEXT_POINTER 1
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 35
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| #endif /* ! C99 */
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 468 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| int yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		unsigned n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 1 "conftest.l"
| 
| #line 652 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { yyless (input () != 0); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 7 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 790 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), (size_t) num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register int number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| #ifndef __cplusplus
| extern int isatty (int );
| #endif /* __cplusplus */
|     
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	int num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param bytes the byte buffer to scan
|  * @param len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 9 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:4969: result: no
configure:4984: checking for flex flags
configure:4990: result: -8
configure:4996: checking for gawk
configure:5023: result: gawk
configure:5046: checking for library containing strerror
configure:5087: gcc -o conftest -g -O2   conftest.c  >&5
configure:5093: $? = 0
configure:5121: result: none required
configure:5132: checking whether the C compiler (gcc) compiles and links a simple C program
configure:5165: gcc -o conftest -g -O2   conftest.c  >&5
configure:5171: $? = 0
configure:5195: result: yes
configure:5265: checking for g++
configure:5281: found /usr/bin/g++
configure:5292: result: g++
configure:5323: checking for C++ compiler version
configure:5330: g++ --version >&5
g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:5333: $? = 0
configure:5340: g++ -v >&5
Using built-in specs.
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.4.7 20120313 (Red Hat 4.4.7-11) (GCC) 
configure:5343: $? = 0
configure:5350: g++ -V >&5
g++: '-V' option must have argument
configure:5353: $? = 1
configure:5356: checking whether we are using the GNU C++ compiler
configure:5385: g++ -c   conftest.cpp >&5
configure:5391: $? = 0
configure:5408: result: yes
configure:5413: checking whether g++ accepts -g
configure:5443: g++ -c -g  conftest.cpp >&5
configure:5449: $? = 0
configure:5548: result: yes
configure:5573: checking dependency style of g++
configure:5664: result: gcc3
configure:5899: checking whether the C++ compiler (g++) compiles a simple program
configure:5932: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:5938: $? = 0
configure:5962: result: yes
configure:6005: checking how to run the C preprocessor
configure:6045: gcc -E  conftest.c
configure:6051: $? = 0
configure:6082: gcc -E  conftest.c
conftest.c:10:28: error: ac_nonexistent.h: No such file or directory
configure:6088: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6121: result: gcc -E
configure:6150: gcc -E  conftest.c
configure:6156: $? = 0
configure:6187: gcc -E  conftest.c
conftest.c:10:28: error: ac_nonexistent.h: No such file or directory
configure:6193: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6235: checking how to run the C++ preprocessor
configure:6271: g++ -E  conftest.cpp
configure:6277: $? = 0
configure:6308: g++ -E  conftest.cpp
conftest.cpp:10:28: error: ac_nonexistent.h: No such file or directory
configure:6314: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6347: result: g++ -E
configure:6376: g++ -E  conftest.cpp
configure:6382: $? = 0
configure:6413: g++ -E  conftest.cpp
conftest.cpp:10:28: error: ac_nonexistent.h: No such file or directory
configure:6419: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6459: checking if this is a problematic g++ version
configure:6502: g++ -E  conftest.cpp
configure:6508: $? = 0
configure:6530: result: no
configure:6545: checking whether the C++ compiler (g++) accepts -Weffc++
configure:6580: g++ -c -Weffc++  conftest.cpp >&5
configure:6586: $? = 0
configure:6609: result: yes
configure:6622: checking whether the C++ compiler (g++) accepts -Wuninitialized
configure:6657: g++ -c -Wuninitialized  conftest.cpp >&5
configure:6663: $? = 0
configure:6686: result: yes
configure:6701: checking whether the C++ compiler (g++) accepts -mminimal-toc
configure:6736: g++ -o conftest -mminimal-toc   conftest.cpp  >&5
cc1plus: error: unrecognized command line option "-mminimal-toc"
configure:6742: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| /* end confdefs.h.  */
| 
| int
| main ()
| {
| int a;
|   ;
|   return 0;
| }
configure:6767: result: no
configure:6985: checking for C++ compiler (g++) warning options
configure:6987: result: -Wall -W -Wwrite-strings
configure:6989: checking for C++ compiler (g++) optimizing options
configure:6991: result:  -O2
configure:6993: checking for C++ compiler (g++) debugging options
configure:6995: result: -g
configure:6997: checking for C++ compiler (g++) extra libraries
configure:6999: result: 
configure:7001: checking for C++ compiler (g++) static binding options
configure:7003: result: -Bstatic
configure:7005: checking for C++ compiler (g++) dynamic binding options
configure:7007: result: -Bdynamic
configure:7013: checking whether the C++ compiler (g++) accepts -fpermissive
configure:7048: g++ -c -fpermissive  conftest.cpp >&5
configure:7054: $? = 0
configure:7077: result: yes
configure:7088: checking whether the C++ compiler (g++) accepts -trigraphs
configure:7123: g++ -c -trigraphs  conftest.cpp >&5
configure:7129: $? = 0
configure:7152: result: yes
configure:7165: checking whether the C++ compiler (g++) supports bool types
configure:7198: g++ -c -g -O2  conftest.cpp >&5
configure:7204: $? = 0
configure:7226: result: yes
configure:7238: checking whether the C++ compiler (g++) supports explicit constructors
configure:7271: g++ -c -g -O2  conftest.cpp >&5
configure:7277: $? = 0
configure:7299: result: yes
configure:7311: checking whether the C++ compiler (g++) supports mutable members
configure:7344: g++ -c -g -O2  conftest.cpp >&5
configure:7350: $? = 0
configure:7372: result: yes
configure:7384: checking whether the C++ compiler (g++) supports exception handling
configure:7417: g++ -c -g -O2  conftest.cpp >&5
configure:7423: $? = 0
configure:7445: result: yes
configure:7457: checking whether the C++ compiler (g++) supports standard exceptions
configure:7494: g++ -c -g -O2  conftest.cpp >&5
configure:7500: $? = 0
configure:7522: result: yes
configure:7534: checking whether the C++ compiler (g++) supports namespaces
configure:7575: g++ -c -g -O2  conftest.cpp >&5
configure:7581: $? = 0
configure:7603: result: yes
configure:7615: checking whether the C++ compiler (g++) supports run-time type info
configure:7651: g++ -c -g -O2  conftest.cpp >&5
configure:7657: $? = 0
configure:7679: result: yes
configure:7691: checking whether the C++ compiler (g++) supports long long types
configure:7724: g++ -c -g -O2  conftest.cpp >&5
configure:7730: $? = 0
configure:7752: result: yes
configure:7764: checking whether the C++ compiler (g++) supports __PRETTY_FUNCTION__
configure:7799: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:7805: $? = 0
configure:7829: result: yes
configure:7841: checking whether the C++ compiler (g++) supports overloaded new
configure:7876: g++ -c -g -O2  conftest.cpp >&5
configure:7882: $? = 0
configure:7904: result: yes
configure:7916: checking whether the C++ compiler (g++) supports placement new
configure:7949: g++ -c -g -O2  conftest.cpp >&5
configure:7955: $? = 0
configure:7977: result: yes
configure:7990: checking whether the C++ compiler (g++) accepts -isystem
configure:8025: g++ -c -isystem .  conftest.cpp >&5
configure:8031: $? = 0
configure:8054: result: yes
configure:8068: checking whether the C++ compiler (g++) supports new style casts
configure:8101: g++ -c -g -O2  conftest.cpp >&5
configure:8107: $? = 0
configure:8129: result: yes
configure:8141: checking whether the C++ compiler (g++) supports __attribute__ ((noreturn))
configure:8174: g++ -c -g -O2  conftest.cpp >&5
configure:8180: $? = 0
configure:8202: result: yes
configure:8214: checking whether the C++ compiler (g++) supports __builtin_expect
configure:8247: g++ -c -g -O2  conftest.cpp >&5
configure:8253: $? = 0
configure:8275: result: yes
configure:8288: checking for a traditional C preprocessor
configure:8330: gcc -E  conftest.c
conftest.c:26:1: warning: missing terminating " character
configure:8336: $? = 0
configure:8359: result: gcc -E
configure:8456: checking for a sed that does not truncate output
configure:8512: result: /bin/sed
configure:8515: checking for grep that handles long lines and -e
configure:8589: result: /bin/grep
configure:8594: checking for egrep
configure:8672: result: /bin/grep -E
configure:8688: checking for ld used by gcc
configure:8755: result: /usr/bin/ld
configure:8764: checking if the linker (/usr/bin/ld) is GNU ld
configure:8779: result: yes
configure:8784: checking for /usr/bin/ld option to reload object files
configure:8791: result: -r
configure:8809: checking for BSD-compatible nm
configure:8858: result: /usr/bin/nm -B
configure:8862: checking how to recognize dependent libraries
configure:9048: result: pass_all
configure:9134: g++ -c -g -O2  conftest.cpp >&5
configure:9137: $? = 0
configure:9285: checking for ANSI C header files
configure:9315: g++ -c -g -O2  conftest.cpp >&5
configure:9321: $? = 0
configure:9420: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:9423: $? = 0
configure:9429: ./conftest
configure:9432: $? = 0
configure:9449: result: yes
configure:9473: checking for sys/types.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for sys/stat.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for stdlib.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for string.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for memory.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for strings.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for inttypes.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for stdint.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9473: checking for unistd.h
configure:9494: g++ -c -g -O2  conftest.cpp >&5
configure:9500: $? = 0
configure:9516: result: yes
configure:9543: checking dlfcn.h usability
configure:9560: g++ -c -g -O2  conftest.cpp >&5
configure:9566: $? = 0
configure:9580: result: yes
configure:9584: checking dlfcn.h presence
configure:9599: g++ -E  conftest.cpp
configure:9605: $? = 0
configure:9619: result: yes
configure:9652: checking for dlfcn.h
configure:9660: result: yes
configure:9683: checking how to run the C++ preprocessor
configure:9795: result: g++ -E
configure:9824: g++ -E  conftest.cpp
configure:9830: $? = 0
configure:9861: g++ -E  conftest.cpp
conftest.cpp:35:28: error: ac_nonexistent.h: No such file or directory
configure:9867: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:10016: checking for Fortran 77 compiler version
configure:10023: g77 --version >&5
./configure: line 10024: g77: command not found
configure:10026: $? = 127
configure:10033: g77 -v >&5
./configure: line 10034: g77: command not found
configure:10036: $? = 127
configure:10043: g77 -V >&5
./configure: line 10044: g77: command not found
configure:10046: $? = 127
configure:10054: checking whether we are using the GNU Fortran 77 compiler
configure:10073: g77 -c -g conftest.F >&5
./configure: line 10074: g77: command not found
configure:10079: $? = 127
configure: failed program was:
|       program main
| #ifndef __GNUC__
|        choke me
| #endif
| 
|       end
configure:10096: result: no
configure:10102: checking whether g77 accepts -g
configure:10119: g77 -c -g conftest.f >&5
./configure: line 10120: g77: command not found
configure:10125: $? = 127
configure: failed program was:
|       program main
| 
|       end
configure:10141: result: no
configure:10170: checking the maximum length of command line arguments
configure:10282: result: 1966080
configure:10294: checking command to parse /usr/bin/nm -B output from gcc object
configure:10399: g++ -c -g -O2  conftest.cpp >&5
configure:10402: $? = 0
configure:10406: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ 	]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ 	][ 	]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' \> conftest.nm
configure:10409: $? = 0
configure:10461: g++ -o conftest -g -O2   conftest.cpp conftstm.o >&5
configure:10464: $? = 0
configure:10502: result: ok
configure:10506: checking for objdir
configure:10521: result: .libs
configure:10613: checking for ar
configure:10629: found /usr/bin/ar
configure:10640: result: ar
configure:10709: checking for ranlib
configure:10725: found /usr/bin/ranlib
configure:10736: result: ranlib
configure:10805: checking for strip
configure:10821: found /usr/bin/strip
configure:10832: result: strip
configure:11430: checking if gcc supports -fno-rtti -fno-exceptions
configure:11448: gcc -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
cc1: warning: command line option "-fno-rtti" is valid for C++/ObjC++ but not for C
configure:11452: $? = 0
configure:11465: result: no
configure:11480: checking for gcc option to produce PIC
configure:11712: result: -fPIC
configure:11720: checking if gcc PIC flag -fPIC works
configure:11738: gcc -c -g -O2  -fPIC -DPIC conftest.c >&5
configure:11742: $? = 0
configure:11755: result: yes
configure:11783: checking if gcc static flag -static works
configure:11811: result: no
configure:11821: checking if gcc supports -c -o file.o
configure:11842: gcc -c -g -O2  -o out/conftest2.o conftest.c >&5
configure:11846: $? = 0
configure:11868: result: yes
configure:11894: checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
configure:12875: result: yes
configure:12896: checking whether -lc should be explicitly linked in
configure:12901: gcc -c -g -O2  conftest.c >&5
configure:12904: $? = 0
configure:12919: gcc -shared conftest.o  -v -Wl,-soname -Wl,conftest -o conftest 2\>\&1 \| grep  -lc  \>/dev/null 2\>\&1
configure:12922: $? = 0
configure:12934: result: no
configure:12942: checking dynamic linker characteristics
configure:13556: result: GNU/Linux ld.so
configure:13580: checking how to hardcode library paths into programs
configure:13605: result: immediate
configure:13619: checking whether stripping libraries is possible
configure:13624: result: yes
configure:14426: checking if libtool supports shared libraries
configure:14428: result: yes
configure:14431: checking whether to build shared libraries
configure:14452: result: yes
configure:14455: checking whether to build static libraries
configure:14459: result: yes
configure:14553: creating libtool
configure:15146: checking for ld used by g++
configure:15213: result: /usr/bin/ld -m elf_x86_64
configure:15222: checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld
configure:15237: result: yes
configure:15288: checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
configure:16234: result: yes
configure:16251: g++ -c -g -O2  conftest.cpp >&5
configure:16254: $? = 0
configure:16410: checking for g++ option to produce PIC
configure:16694: result: -fPIC
configure:16702: checking if g++ PIC flag -fPIC works
configure:16720: g++ -c -g -O2  -fPIC -DPIC conftest.cpp >&5
configure:16724: $? = 0
configure:16737: result: yes
configure:16765: checking if g++ static flag -static works
configure:16793: result: no
configure:16803: checking if g++ supports -c -o file.o
configure:16824: g++ -c -g -O2  -o out/conftest2.o conftest.cpp >&5
configure:16828: $? = 0
configure:16850: result: yes
configure:16876: checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
configure:16905: result: yes
configure:16972: checking dynamic linker characteristics
configure:17534: result: GNU/Linux ld.so
configure:17558: checking how to hardcode library paths into programs
configure:17583: result: immediate
configure:18122: checking if libtool supports shared libraries
configure:18124: result: yes
configure:18127: checking whether to build shared libraries
configure:18147: result: yes
configure:18150: checking whether to build static libraries
configure:18154: result: yes
configure:18164: checking for g77 option to produce PIC
configure:18396: result: -fPIC
configure:18404: checking if g77 PIC flag -fPIC works
configure:18422: g77 -c -g -fPIC conftest.f >&5
./configure: line 18423: g77: command not found
configure:18426: $? = 127
configure:18439: result: no
configure:18467: checking if g77 static flag -static works
configure:18495: result: no
configure:18505: checking if g77 supports -c -o file.o
configure:18526: g77 -c -g -o out/conftest2.o conftest.f >&5
./configure: line 18527: g77: command not found
configure:18530: $? = 127
configure:18552: result: no
configure:18578: checking whether the g77 linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
configure:19539: result: yes
configure:19606: checking dynamic linker characteristics
configure:20168: result: GNU/Linux ld.so
configure:20192: checking how to hardcode library paths into programs
configure:20217: result: immediate
configure:23831: checking for connect
configure:23887: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:23893: $? = 0
configure:23910: result: yes
configure:23917: checking for gethostbyname
configure:23973: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:23979: $? = 0
configure:23996: result: yes
configure:24003: checking for regcmp
configure:24059: g++ -o conftest -g -O2   conftest.cpp  >&5
/tmp/ccrixWVk.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.cpp:69: undefined reference to `regcmp'
collect2: ld returned 1 exit status
configure:24065: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| /* Define regcmp to an innocuous variant, in case <limits.h> declares regcmp.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define regcmp innocuous_regcmp
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char regcmp (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef regcmp
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char regcmp ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_regcmp || defined __stub___regcmp
| choke me
| #endif
| 
| int
| main ()
| {
| return regcmp ();
|   ;
|   return 0;
| }
configure:24082: result: no
configure:24225: checking for regcmp in -lgen
configure:24260: g++ -o conftest -g -O2   conftest.cpp -lgen   >&5
/usr/bin/ld: cannot find -lgen
collect2: ld returned 1 exit status
configure:24266: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char regcmp ();
| int
| main ()
| {
| return regcmp ();
|   ;
|   return 0;
| }
configure:24284: result: no
configure:24292: checking for yyerror in -ly
configure:24327: g++ -o conftest -g -O2   conftest.cpp -ly   >&5
/usr/bin/ld: cannot find -ly
collect2: ld returned 1 exit status
configure:24333: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char yyerror ();
| int
| main ()
| {
| return yyerror ();
|   ;
|   return 0;
| }
configure:24351: result: no
configure:24358: checking for sin in -lm
configure:24393: g++ -o conftest -g -O2   conftest.cpp -lm   >&5
configure:24399: $? = 0
configure:24417: result: yes
configure:24424: checking for open in -lc
configure:24459: g++ -o conftest -g -O2   conftest.cpp -lc   >&5
configure:24465: $? = 0
configure:24483: result: yes
configure:24490: checking for elf_version in -lelf
configure:24525: g++ -o conftest -g -O2   conftest.cpp -lelf   >&5
/usr/bin/ld: cannot find -lelf
collect2: ld returned 1 exit status
configure:24531: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char elf_version ();
| int
| main ()
| {
| return elf_version ();
|   ;
|   return 0;
| }
configure:24549: result: no
configure:24659: checking for tgetent in -lmytinfo
configure:24694: g++ -o conftest -g -O2   conftest.cpp -lmytinfo   >&5
/usr/bin/ld: cannot find -lmytinfo
collect2: ld returned 1 exit status
configure:24700: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char tgetent ();
| int
| main ()
| {
| return tgetent ();
|   ;
|   return 0;
| }
configure:24719: result: no
configure:24659: checking for tgetent in -lncurses
configure:24694: g++ -o conftest -g -O2   conftest.cpp -lncurses   >&5
configure:24700: $? = 0
configure:24719: result: yes
configure:25718: checking for streampos
configure:25752: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp: In function 'int main()':
conftest.cpp:40: error: 'streampos' was not declared in this scope
conftest.cpp:40: error: expected ';' before 'p'
configure:25758: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| #include <iostream>
| #include <fstream>
| int
| main ()
| {
| streampos p;
|   ;
|   return 0;
| }
configure:25780: result: no
configure:25792: checking for std::streampos
configure:25826: g++ -c -g -O2  conftest.cpp >&5
configure:25832: $? = 0
configure:25854: result: yes
configure:25887: checking whether the C++ compiler (g++) accepts -fpermissive
configure:25951: result: yes
configure:25960: checking for X
configure:26075: g++ -E  conftest.cpp
configure:26081: $? = 0
configure:26130: g++ -o conftest -g -O2 -fpermissive   conftest.cpp -lX11  >&5
configure:26136: $? = 0
configure:26195: result: libraries , headers 
configure:26356: g++ -o conftest -g -O2 -fpermissive   conftest.cpp   -lX11 >&5
configure:26362: $? = 0
configure:26519: checking for gethostbyname
configure:26598: result: yes
configure:26743: checking for connect
configure:26822: result: yes
configure:26894: checking for remove
configure:26950: g++ -o conftest -g -O2 -fpermissive   conftest.cpp  >&5
configure:26956: $? = 0
configure:26973: result: yes
configure:27045: checking for shmat
configure:27101: g++ -o conftest -g -O2 -fpermissive   conftest.cpp  >&5
configure:27107: $? = 0
configure:27124: result: yes
configure:27205: checking for IceConnectionNumber in -lICE
configure:27240: g++ -o conftest -g -O2 -fpermissive   conftest.cpp -lICE   >&5
configure:27246: $? = 0
configure:27264: result: yes
configure:27277: checking whether libXext is in the standard X library path
configure:27314: g++ -o conftest -g -O2 -fpermissive   conftest.cpp -lXext  -lSM -lICE -lX11   >&5
configure:27320: $? = 0
configure:27340: result: yes
configure:27348: checking whether libXp is in the standard X library path
configure:27385: g++ -o conftest -g -O2 -fpermissive   conftest.cpp -lXp -lXext  -lSM -lICE -lX11   >&5
configure:27391: $? = 0
configure:27411: result: yes
configure:27419: checking whether libXmu is in the standard X library path
configure:27456: g++ -o conftest -g -O2 -fpermissive   conftest.cpp -lXmu -lXt -lXext  -lSM -lICE -lX11   >&5
configure:27462: $? = 0
configure:27482: result: yes
configure:27518: checking for Motif
configure:27560: g++ -c -g -O2 -fpermissive   conftest.cpp >&5
configure:27566: $? = 0
configure:27665: g++ -o conftest -g -O2 -fpermissive     conftest.cpp -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11   >&5
configure:27671: $? = 0
configure:27755: result: libraries in default path, headers in default path
configure:27786: checking for Xpm
configure:27831: g++ -c -g -O2 -fpermissive   conftest.cpp >&5
conftest.cpp:37:21: error: X11/xpm.h: No such file or directory
configure:27837: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| #include <X11/xpm.h>
| 
| int
| main ()
| {
| int a;
|   ;
|   return 0;
| }
configure:27936: g++ -o conftest -g -O2 -fpermissive     conftest.cpp -lXt -lXpm  -lSM -lICE -lX11   >&5
conftest.cpp:38:21: error: X11/xpm.h: No such file or directory
configure:27942: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| #include <X11/Intrinsic.h>
| #include <X11/xpm.h>
| 
| int
| main ()
| {
| XtToolkitInitialize();
|   ;
|   return 0;
| }
configure:28022: result: libraries in default path, headers (none)
configure:28055: checking for Athena
configure:28103: g++ -c -g -O2 -fpermissive   conftest.cpp >&5
conftest.cpp:38:26: error: X11/Xaw/Text.h: No such file or directory
configure:28109: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| #include <X11/Intrinsic.h>
| #include <X11/Xaw/Text.h>
| 
| int
| main ()
| {
| int a;
|   ;
|   return 0;
| }
configure:28212: g++ -o conftest -g -O2 -fpermissive     conftest.cpp -lXaw -lXmu -lXt -lXpm -lXext  -lSM -lICE -lX11   >&5
conftest.cpp:38:26: error: X11/Xaw/Text.h: No such file or directory
configure:28218: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| #include <X11/Intrinsic.h>
| #include <X11/Xaw/Text.h>
| 
| int
| main ()
| {
| XtToolkitInitialize();
|   ;
|   return 0;
| }
configure:28299: result: libraries in default path, headers (none)
configure:28306: checking whether compiling X headers requires -fpermissive
configure:28341: g++ -c -g -O2 -fpermissive  conftest.cpp >&5
configure:28347: $? = 0
configure:28417: result: no
configure:28435: checking for XOpenDisplay in -lX11
configure:28470: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lX11  -lSM -lICE    >&5
configure:28476: $? = 0
configure:28494: result: yes
configure:28516: checking for _Xlcmbcurmax in -lXintl
configure:28551: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXintl  -lSM -lICE -lX11    >&5
/usr/bin/ld: cannot find -lXintl
collect2: ld returned 1 exit status
configure:28557: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _Xlcmbcurmax ();
| int
| main ()
| {
| return _Xlcmbcurmax ();
|   ;
|   return 0;
| }
configure:28575: result: no
configure:28581: checking for shmap in -lipc
configure:28616: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lipc  -lSM -lICE -lX11    >&5
/usr/bin/ld: cannot find -lipc
collect2: ld returned 1 exit status
configure:28622: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char shmap ();
| int
| main ()
| {
| return shmap ();
|   ;
|   return 0;
| }
configure:28640: result: no
configure:28647: checking for XtToolkitInitialize in -lXt
configure:28682: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXt  -lSM -lICE -lX11    >&5
configure:28688: $? = 0
configure:28706: result: yes
configure:28727: checking for XShapeQueryVersion in -lXext
configure:28762: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXext  -lSM -lICE -lX11    >&5
configure:28768: $? = 0
configure:28786: result: yes
configure:28794: checking for XmuCvtStringToOrientation in -lXmu
configure:28829: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXmu -lXt -lXext  -lSM -lICE -lX11    >&5
configure:28835: $? = 0
configure:28853: result: yes
configure:29316: checking for XpSelectInput in -lXp
configure:29351: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXp -lXext  -lSM -lICE -lX11     >&5
configure:29357: $? = 0
configure:29375: result: yes
configure:29386: checking for XmCreateOptionMenu in -lXm
configure:29421: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11     >&5
configure:29427: $? = 0
configure:29445: result: yes
configure:29456: checking for xmUseVersion in -lXm
configure:29491: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11     >&5
configure:29497: $? = 0
configure:29515: result: yes
configure:29525: checking for XmInstallImage in -lXm
configure:29560: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11     >&5
configure:29566: $? = 0
configure:29584: result: yes
configure:29594: checking for Xm21InstallImage in -lXm
configure:29629: g++ -o conftest -g -O2 -fpermissive      conftest.cpp -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11     >&5
/tmp/ccHCh4cr.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.cpp:51: undefined reference to `Xm21InstallImage'
collect2: ld returned 1 exit status
configure:29635: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char Xm21InstallImage ();
| int
| main ()
| {
| return Xm21InstallImage ();
|   ;
|   return 0;
| }
configure:29653: result: no
configure:29697: checking for the name of the translation resource
configure:29728: g++ -c -g -O2 -fpermissive    conftest.cpp >&5
configure:29734: $? = 0
configure:29750: result: baseTranslations
configure:29757: checking whether Motif dialogs own the string table
configure:29847: g++ -o conftest -g -O2 -fpermissive      conftest.cpp   -lXm -lXmu -lXt -lXp -lXext  -lSM -lICE -lX11   >&5
conftest.cpp: In function 'int main(int, char**)':
conftest.cpp:76: warning: deprecated conversion from string constant to 'char*'
conftest.cpp:84: warning: deprecated conversion from string constant to 'char*'
configure:29850: $? = 0
configure:29856: ./conftest
./configure: line 29857: 17525 Segmentation fault      ./conftest$ac_exeext
configure:29859: $? = 139
configure: program exited with status 139
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| /* end confdefs.h.  */
| 
| #include <Xm/Xm.h>
| #include <Xm/SelectioB.h>
| #include <stdlib.h>
| #include <stdio.h>
| 
| #ifdef XmFONTLIST_DEFAULT_TAG
| #define DEFAULT_CHARSET XmFONTLIST_DEFAULT_TAG
| #else
| #define DEFAULT_CHARSET XmSTRING_DEFAULT_CHARSET
| #endif
| 
| extern "C" void free(void *p)
| {
|     static void *freed[100000];
|     static int freed_count = 0;
| 
|     for (int i = 0; i < freed_count; i++)
| 	if (freed[i] == p)
| 	{
| 	    fprintf(stderr, "%p already freed\n", p);
| 	    exit(1);
| 	}
| 
|     freed[freed_count++] = p;
| }
| 
| int main(int argc, char *argv[])
| {
|     XtAppContext app_context;
|     Widget toplevel =
| 	XtAppInitialize(&app_context, "Config",
| 			XrmOptionDescList(0), 0,
| 			&argc, argv, (String *)0, ArgList(0), 0);
| 
|     Widget dialog =
| 	XmCreateSelectionDialog(toplevel, "dialog", ArgList(0), 0);
| 
|     int length = 10;
| 
|     XmStringTable xmlist =
| 	XmStringTable(XtMalloc(length * sizeof(XmString)));
|     int i;
|     for (i = 0; i < length; i++)
| 	xmlist[i] = XmStringCreateLtoR("abc", DEFAULT_CHARSET);
| 
|     XtVaSetValues (dialog,
| 		   XmNlistItems,     xmlist,
| 		   XmNlistItemCount, length,
| 		   XtPointer(0));
| 
|     for (i = 0; i < length; i++)
| 	XmStringFree(xmlist[i]);
| 
|     XtFree((char *)xmlist);
| 
|     XtDestroyWidget(toplevel);
| 
|     exit(0);
| }
| 
configure:29882: result: yes
configure:29898: checking whether make sets $(MAKE)
configure:29919: result: yes
configure:29934: checking for mode_t
configure:29964: gcc -c -g -O2  conftest.c >&5
configure:29970: $? = 0
configure:29985: result: yes
configure:29997: checking for off_t
configure:30027: gcc -c -g -O2  conftest.c >&5
configure:30033: $? = 0
configure:30048: result: yes
configure:30060: checking for pid_t
configure:30090: gcc -c -g -O2  conftest.c >&5
configure:30096: $? = 0
configure:30111: result: yes
configure:30123: checking for size_t
configure:30153: gcc -c -g -O2  conftest.c >&5
configure:30159: $? = 0
configure:30174: result: yes
configure:30186: checking for uid_t in sys/types.h
configure:30209: result: yes
configure:30224: checking type of array argument to getgroups
configure:30268: gcc -o conftest -g -O2   conftest.c  >&5
configure:30271: $? = 0
configure:30277: ./conftest
configure:30280: $? = 0
configure:30315: result: gid_t
configure:30323: checking return type of signal handlers
configure:30351: gcc -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:48: error: void value not ignored as it ought to be
configure:30357: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| /* end confdefs.h.  */
| #include <sys/types.h>
| #include <signal.h>
| 
| int
| main ()
| {
| return *(signal (0, 0)) (0) == 1;
|   ;
|   return 0;
| }
configure:30372: result: void
configure:30388: checking parameter type of signal handlers
configure:30430: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:49: error: declaration of C function 'void (* signal(int, void (*)(...)))(...)' conflicts with
/usr/include/signal.h:101: error: previous declaration 'void (* signal(int, void (*)(int)))(int)' here
configure:30436: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| /* end confdefs.h.  */
| 
| #include <sys/types.h>
| #include <signal.h>
| #ifdef signal
| # undef signal
| #endif
| extern "C" RETSIGTYPE (*signal (int, RETSIGTYPE (*)(...)))(...);
| int
| main ()
| {
| int i;
|   ;
|   return 0;
| }
configure:30480: g++ -c -g -O2  conftest.cpp >&5
configure:30486: $? = 0
configure:30559: result: int
configure:30571: checking for getpgrp
configure:30627: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:30633: $? = 0
configure:30650: result: yes
configure:30653: checking for setpgrp
configure:30709: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:30715: $? = 0
configure:30732: result: yes
configure:30741: checking whether getpgrp requires zero arguments
configure:30768: gcc -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:80: error: too many arguments to function 'getpgrp'
configure:30774: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| getpgrp (0);
|   ;
|   return 0;
| }
configure:30790: result: yes
configure:30800: checking whether setpgrp takes no argument
configure:30834: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:84: error: too many arguments to function 'setpgrp'
configure:30837: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| /* If this system has a BSD-style setpgrp which takes arguments,
|   setpgrp(1, 1) will fail with ESRCH and return -1, in that case
|   exit successfully. */
|   return setpgrp (1,1) != -1;
|   ;
|   return 0;
| }
configure:30862: result: yes
configure:30878: checking for ANSI C header files
configure:31042: result: yes
configure:31072: checking alloca.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking alloca.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for alloca.h
configure:31189: result: yes
configure:31072: checking fcntl.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking fcntl.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for fcntl.h
configure:31189: result: yes
configure:31072: checking locale.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking locale.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for locale.h
configure:31189: result: yes
configure:31072: checking malloc.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking malloc.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for malloc.h
configure:31189: result: yes
configure:31072: checking netdb.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking netdb.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for netdb.h
configure:31189: result: yes
configure:31072: checking pwd.h usability
configure:31089: g++ -c -g -O2  conftest.cpp >&5
configure:31095: $? = 0
configure:31109: result: yes
configure:31113: checking pwd.h presence
configure:31128: g++ -E  conftest.cpp
configure:31134: $? = 0
configure:31148: result: yes
configure:31181: checking for pwd.h
configure:31189: result: yes
configure:31218: checking libelf.h usability
configure:31235: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:86:20: error: libelf.h: No such file or directory
configure:31241: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <libelf.h>
configure:31255: result: no
configure:31259: checking libelf.h presence
configure:31274: g++ -E  conftest.cpp
conftest.cpp:53:20: error: libelf.h: No such file or directory
configure:31280: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| /* end confdefs.h.  */
| #include <libelf.h>
configure:31294: result: no
configure:31327: checking for libelf.h
configure:31335: result: no
configure:31208: checking for stdlib.h
configure:31214: result: yes
configure:31357: checking for string.h
configure:31363: result: yes
configure:31367: checking stropts.h usability
configure:31384: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:88:21: error: stropts.h: No such file or directory
configure:31390: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <stropts.h>
configure:31404: result: no
configure:31408: checking stropts.h presence
configure:31423: g++ -E  conftest.cpp
conftest.cpp:55:21: error: stropts.h: No such file or directory
configure:31429: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| /* end confdefs.h.  */
| #include <stropts.h>
configure:31443: result: no
configure:31476: checking for stropts.h
configure:31484: result: no
configure:31367: checking termio.h usability
configure:31384: g++ -c -g -O2  conftest.cpp >&5
configure:31390: $? = 0
configure:31404: result: yes
configure:31408: checking termio.h presence
configure:31423: g++ -E  conftest.cpp
configure:31429: $? = 0
configure:31443: result: yes
configure:31476: checking for termio.h
configure:31484: result: yes
configure:31367: checking termios.h usability
configure:31384: g++ -c -g -O2  conftest.cpp >&5
configure:31390: $? = 0
configure:31404: result: yes
configure:31408: checking termios.h presence
configure:31423: g++ -E  conftest.cpp
configure:31429: $? = 0
configure:31443: result: yes
configure:31476: checking for termios.h
configure:31484: result: yes
configure:31357: checking for unistd.h
configure:31363: result: yes
configure:31515: checking sys/ioctl.h usability
configure:31532: g++ -c -g -O2  conftest.cpp >&5
configure:31538: $? = 0
configure:31552: result: yes
configure:31556: checking sys/ioctl.h presence
configure:31571: g++ -E  conftest.cpp
configure:31577: $? = 0
configure:31591: result: yes
configure:31624: checking for sys/ioctl.h
configure:31632: result: yes
configure:31515: checking sys/int_types.h usability
configure:31532: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:92:27: error: sys/int_types.h: No such file or directory
configure:31538: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/int_types.h>
configure:31552: result: no
configure:31556: checking sys/int_types.h presence
configure:31571: g++ -E  conftest.cpp
conftest.cpp:59:27: error: sys/int_types.h: No such file or directory
configure:31577: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| /* end confdefs.h.  */
| #include <sys/int_types.h>
configure:31591: result: no
configure:31624: checking for sys/int_types.h
configure:31632: result: no
configure:31515: checking sys/param.h usability
configure:31532: g++ -c -g -O2  conftest.cpp >&5
configure:31538: $? = 0
configure:31552: result: yes
configure:31556: checking sys/param.h presence
configure:31571: g++ -E  conftest.cpp
configure:31577: $? = 0
configure:31591: result: yes
configure:31624: checking for sys/param.h
configure:31632: result: yes
configure:31515: checking sys/resource.h usability
configure:31532: g++ -c -g -O2  conftest.cpp >&5
configure:31538: $? = 0
configure:31552: result: yes
configure:31556: checking sys/resource.h presence
configure:31571: g++ -E  conftest.cpp
configure:31577: $? = 0
configure:31591: result: yes
configure:31624: checking for sys/resource.h
configure:31632: result: yes
configure:31653: checking for sys/stat.h
configure:31659: result: yes
configure:31663: checking sys/stropts.h usability
configure:31680: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:95:25: error: sys/stropts.h: No such file or directory
configure:31686: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/stropts.h>
configure:31700: result: no
configure:31704: checking sys/stropts.h presence
configure:31719: g++ -E  conftest.cpp
conftest.cpp:62:25: error: sys/stropts.h: No such file or directory
configure:31725: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| /* end confdefs.h.  */
| #include <sys/stropts.h>
configure:31739: result: no
configure:31772: checking for sys/stropts.h
configure:31780: result: no
configure:31663: checking sys/vty.h usability
configure:31680: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp:95:21: error: sys/vty.h: No such file or directory
configure:31686: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/vty.h>
configure:31700: result: no
configure:31704: checking sys/vty.h presence
configure:31719: g++ -E  conftest.cpp
conftest.cpp:62:21: error: sys/vty.h: No such file or directory
configure:31725: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| /* end confdefs.h.  */
| #include <sys/vty.h>
configure:31739: result: no
configure:31772: checking for sys/vty.h
configure:31780: result: no
configure:31663: checking sys/sysmacros.h usability
configure:31680: g++ -c -g -O2  conftest.cpp >&5
configure:31686: $? = 0
configure:31700: result: yes
configure:31704: checking sys/sysmacros.h presence
configure:31719: g++ -E  conftest.cpp
configure:31725: $? = 0
configure:31739: result: yes
configure:31772: checking for sys/sysmacros.h
configure:31780: result: yes
configure:31812: checking sys/socket.h usability
configure:31829: g++ -c -g -O2  conftest.cpp >&5
configure:31835: $? = 0
configure:31849: result: yes
configure:31853: checking sys/socket.h presence
configure:31868: g++ -E  conftest.cpp
configure:31874: $? = 0
configure:31888: result: yes
configure:31921: checking for sys/socket.h
configure:31929: result: yes
configure:31812: checking sys/termios.h usability
configure:31829: g++ -c -g -O2  conftest.cpp >&5
configure:31835: $? = 0
configure:31849: result: yes
configure:31853: checking sys/termios.h presence
configure:31868: g++ -E  conftest.cpp
configure:31874: $? = 0
configure:31888: result: yes
configure:31921: checking for sys/termios.h
configure:31929: result: yes
configure:31812: checking sys/time.h usability
configure:31829: g++ -c -g -O2  conftest.cpp >&5
configure:31835: $? = 0
configure:31849: result: yes
configure:31853: checking sys/time.h presence
configure:31868: g++ -E  conftest.cpp
configure:31874: $? = 0
configure:31888: result: yes
configure:31921: checking for sys/time.h
configure:31929: result: yes
configure:31812: checking sys/timeb.h usability
configure:31829: g++ -c -g -O2  conftest.cpp >&5
configure:31835: $? = 0
configure:31849: result: yes
configure:31853: checking sys/timeb.h presence
configure:31868: g++ -E  conftest.cpp
configure:31874: $? = 0
configure:31888: result: yes
configure:31921: checking for sys/timeb.h
configure:31929: result: yes
configure:31802: checking for sys/types.h
configure:31808: result: yes
configure:31958: checking sys/utsname.h usability
configure:31975: g++ -c -g -O2  conftest.cpp >&5
configure:31981: $? = 0
configure:31995: result: yes
configure:31999: checking sys/utsname.h presence
configure:32014: g++ -E  conftest.cpp
configure:32020: $? = 0
configure:32034: result: yes
configure:32067: checking for sys/utsname.h
configure:32075: result: yes
configure:31958: checking sys/ptrace.h usability
configure:31975: g++ -c -g -O2  conftest.cpp >&5
configure:31981: $? = 0
configure:31995: result: yes
configure:31999: checking sys/ptrace.h presence
configure:32014: g++ -E  conftest.cpp
configure:32020: $? = 0
configure:32034: result: yes
configure:32067: checking for sys/ptrace.h
configure:32075: result: yes
configure:32104: checking exception usability
configure:32121: g++ -c -g -O2  conftest.cpp >&5
configure:32127: $? = 0
configure:32141: result: yes
configure:32145: checking exception presence
configure:32160: g++ -E  conftest.cpp
configure:32166: $? = 0
configure:32180: result: yes
configure:32213: checking for exception
configure:32221: result: yes
configure:32104: checking stdexcept usability
configure:32121: g++ -c -g -O2  conftest.cpp >&5
configure:32127: $? = 0
configure:32141: result: yes
configure:32145: checking stdexcept presence
configure:32160: g++ -E  conftest.cpp
configure:32166: $? = 0
configure:32180: result: yes
configure:32213: checking for stdexcept
configure:32221: result: yes
configure:32234: checking whether time.h and sys/time.h may both be included
configure:32264: g++ -c -g -O2  conftest.cpp >&5
configure:32270: $? = 0
configure:32285: result: yes
configure:32295: checking for sys/wait.h that is POSIX.1 compatible
configure:32331: g++ -c -g -O2  conftest.cpp >&5
configure:32337: $? = 0
configure:32352: result: yes
configure:32370: checking for dirent.h that defines DIR
configure:32399: g++ -c -g -O2  conftest.cpp >&5
configure:32405: $? = 0
configure:32421: result: yes
configure:32434: checking for library containing opendir
configure:32475: g++ -o conftest -g -O2   conftest.cpp  >&5
configure:32481: $? = 0
configure:32509: result: none required
configure:32603: checking whether stat file-mode macros are broken
configure:32640: g++ -c -g -O2  conftest.cpp >&5
configure:32646: $? = 0
configure:32661: result: no
configure:32674: checking for PTRACE_DUMPCORE definition in <sys/ptrace.h>
configure:32701: g++ -c -g -O2  conftest.cpp >&5
conftest.cpp: In function 'int main()':
conftest.cpp:79: error: 'PTRACE_DUMPCORE' was not declared in this scope
configure:32707: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_SYSMACROS_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TERMIOS_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMEB_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_UTSNAME_H 1
| #define HAVE_SYS_PTRACE_H 1
| #define HAVE_EXCEPTION 1
| #define HAVE_STDEXCEPT 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_SYS_WAIT_H 1
| #define HAVE_DIRENT_H 1
| /* end confdefs.h.  */
| #include <sys/ptrace.h>
| int
| main ()
| {
| int request = PTRACE_DUMPCORE;
|   ;
|   return 0;
| }
configure:32723: result: no
configure:32735: checking for hypot in -lm
configure:32770: g++ -o conftest -g -O2   conftest.cpp -lm   >&5
configure:32776: $? = 0
configure:32794: result: yes
configure:32820: checking for _getpty
configure:32876: gcc -o conftest -g -O2   conftest.c -lm  >&5
/tmp/ccUO26L1.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.c:110: undefined reference to `_getpty'
collect2: ld returned 1 exit status
configure:32882: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_SYSMACROS_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TERMIOS_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMEB_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_UTSNAME_H 1
| #define HAVE_SYS_PTRACE_H 1
| #define HAVE_EXCEPTION 1
| #define HAVE_STDEXCEPT 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_SYS_WAIT_H 1
| #define HAVE_DIRENT_H 1
| #define HAVE_LIBM 1
| /* end confdefs.h.  */
| /* Define _getpty to an innocuous variant, in case <limits.h> declares _getpty.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _getpty innocuous__getpty
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _getpty (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _getpty
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _getpty ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__getpty || defined __stub____getpty
| choke me
| #endif
| 
| int
| main ()
| {
| return _getpty ();
|   ;
|   return 0;
| }
configure:32900: result: no
configure:32995: checking for alloca
configure:33051: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:99: warning: conflicting types for built-in function 'alloca'
/tmp/cchlmUR5.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.c:110: undefined reference to `alloca'
collect2: ld returned 1 exit status
configure:33057: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_SYSMACROS_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TERMIOS_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMEB_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_UTSNAME_H 1
| #define HAVE_SYS_PTRACE_H 1
| #define HAVE_EXCEPTION 1
| #define HAVE_STDEXCEPT 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_SYS_WAIT_H 1
| #define HAVE_DIRENT_H 1
| #define HAVE_LIBM 1
| /* end confdefs.h.  */
| /* Define alloca to an innocuous variant, in case <limits.h> declares alloca.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define alloca innocuous_alloca
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char alloca (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef alloca
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char alloca ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_alloca || defined __stub___alloca
| choke me
| #endif
| 
| int
| main ()
| {
| return alloca ();
|   ;
|   return 0;
| }
configure:33075: result: no
configure:33170: checking for asctime
configure:33226: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:33232: $? = 0
configure:33250: result: yes
configure:33267: checking for asctime declaration in time.h
configure:33318: result: yes
configure:33345: checking for clock
configure:33401: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:33407: $? = 0
configure:33425: result: yes
configure:33442: checking for clock declaration in time.h
configure:33493: result: yes
configure:33520: checking for difftime
configure:33576: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:33582: $? = 0
configure:33600: result: yes
configure:33617: checking for difftime declaration in time.h
configure:33668: result: yes
configure:33695: checking for dup2
configure:33751: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:33757: $? = 0
configure:33775: result: yes
configure:33792: checking for dup2 declaration in unistd.h
configure:33843: result: yes
configure:33870: checking for endpwent
configure:33926: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:33932: $? = 0
configure:33950: result: yes
configure:33967: checking for endpwent declaration in pwd.h
configure:34018: result: yes
configure:34045: checking for fcntl
configure:34101: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:34107: $? = 0
configure:34125: result: yes
configure:34142: checking for fcntl declaration in fcntl.h
configure:34193: result: yes
configure:34220: checking for ftime
configure:34276: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:34282: $? = 0
configure:34300: result: yes
configure:34317: checking for ftime declaration in sys/timeb.h
configure:34368: result: yes
configure:34395: checking for gethostbyname
configure:34475: result: yes
configure:34492: checking for gethostbyname declaration in netdb.h
configure:34543: result: yes
configure:34570: checking for gethostname
configure:34626: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:34632: $? = 0
configure:34650: result: yes
configure:34667: checking for gethostname declaration in unistd.h
configure:34718: result: yes
configure:34745: checking for getpt
configure:34801: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:34807: $? = 0
configure:34825: result: yes
configure:34842: checking for getpt declaration in stdlib.h
configure:34893: result: yes
configure:34920: checking for getpty
configure:34976: gcc -o conftest -g -O2   conftest.c -lm  >&5
/tmp/ccXn7RmZ.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.c:130: undefined reference to `getpty'
collect2: ld returned 1 exit status
configure:34982: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_SYSMACROS_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TERMIOS_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMEB_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_UTSNAME_H 1
| #define HAVE_SYS_PTRACE_H 1
| #define HAVE_EXCEPTION 1
| #define HAVE_STDEXCEPT 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_SYS_WAIT_H 1
| #define HAVE_DIRENT_H 1
| #define HAVE_LIBM 1
| #define HAVE_ASCTIME 1
| #define HAVE_ASCTIME_DECL 1
| #define HAVE_CLOCK 1
| #define HAVE_CLOCK_DECL 1
| #define HAVE_DIFFTIME 1
| #define HAVE_DIFFTIME_DECL 1
| #define HAVE_DUP2 1
| #define HAVE_DUP2_DECL 1
| #define HAVE_ENDPWENT 1
| #define HAVE_ENDPWENT_DECL 1
| #define HAVE_FCNTL 1
| #define HAVE_FCNTL_DECL 1
| #define HAVE_FTIME 1
| #define HAVE_FTIME_DECL 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTBYNAME_DECL 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETHOSTNAME_DECL 1
| #define HAVE_GETPT 1
| #define HAVE_GETPT_DECL 1
| /* end confdefs.h.  */
| /* Define getpty to an innocuous variant, in case <limits.h> declares getpty.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define getpty innocuous_getpty
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char getpty (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef getpty
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char getpty ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_getpty || defined __stub___getpty
| choke me
| #endif
| 
| int
| main ()
| {
| return getpty ();
|   ;
|   return 0;
| }
configure:35000: result: no
configure:35095: checking for getrlimit
configure:35151: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:35157: $? = 0
configure:35175: result: yes
configure:35192: checking for getrlimit declaration in sys/resource.h
configure:35243: result: yes
configure:35270: checking for getrusage
configure:35326: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:35332: $? = 0
configure:35350: result: yes
configure:35367: checking for getrusage declaration in sys/resource.h
configure:35418: result: yes
configure:35445: checking for getwd
configure:35501: gcc -o conftest -g -O2   conftest.c -lm  >&5
/tmp/ccEQ7Whd.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.c:134: warning: the `getwd' function is dangerous and should not be used.
configure:35507: $? = 0
configure:35525: result: yes
configure:35542: checking for getwd declaration in unistd.h
configure:35593: result: yes
configure:35620: checking for grantpt
configure:35676: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:35682: $? = 0
configure:35700: result: yes
configure:35717: checking for grantpt declaration in stdlib.h
configure:35768: result: yes
configure:35795: checking for hypot
configure:35851: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:127: warning: conflicting types for built-in function 'hypot'
configure:35857: $? = 0
configure:35875: result: yes
configure:35892: checking for hypot declaration in math.h
configure:35943: result: yes
configure:35970: checking for ioctl
configure:36026: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:36032: $? = 0
configure:36050: result: yes
configure:36067: checking for ioctl declaration in unistd.h sys/ioctl.h
configure:36118: result: yes
configure:36145: checking for link
configure:36201: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:36207: $? = 0
configure:36225: result: yes
configure:36242: checking for link declaration in unistd.h
configure:36293: result: yes
configure:36320: checking for lstat
configure:36376: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:36382: $? = 0
configure:36400: result: yes
configure:36417: checking for lstat declaration in sys/stat.h
configure:36468: result: yes
configure:36495: checking for malloc
configure:36551: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:135: warning: conflicting types for built-in function 'malloc'
configure:36557: $? = 0
configure:36575: result: yes
configure:36592: checking for malloc declaration in stdlib.h
configure:36643: result: yes
configure:36670: checking for memcpy
configure:36726: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:137: warning: conflicting types for built-in function 'memcpy'
configure:36732: $? = 0
configure:36750: result: yes
configure:36767: checking for memcpy declaration in string.h
configure:36818: result: yes
configure:36845: checking for memset
configure:36901: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:139: warning: conflicting types for built-in function 'memset'
configure:36907: $? = 0
configure:36925: result: yes
configure:36942: checking for memset declaration in string.h
configure:36993: result: yes
configure:37020: checking for mkstemp
configure:37076: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37082: $? = 0
configure:37100: result: yes
configure:37117: checking for mkstemp declaration in stdlib.h
configure:37168: result: yes
configure:37195: checking for pclose
configure:37251: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37257: $? = 0
configure:37275: result: yes
configure:37292: checking for pclose declaration in stdio.h
configure:37343: result: yes
configure:37370: checking for popen
configure:37426: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37432: $? = 0
configure:37450: result: yes
configure:37467: checking for popen declaration in stdio.h
configure:37518: result: yes
configure:37545: checking for ptrace
configure:37601: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37607: $? = 0
configure:37625: result: yes
configure:37642: checking for ptrace declaration in unistd.h sys/ptrace.h
configure:37693: result: yes
configure:37720: checking for ptsname
configure:37776: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37782: $? = 0
configure:37800: result: yes
configure:37817: checking for ptsname declaration in stdlib.h
configure:37868: result: yes
configure:37895: checking for putenv
configure:37951: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:37957: $? = 0
configure:37975: result: yes
configure:37992: checking for putenv declaration in stdlib.h
configure:38043: result: yes
configure:38070: checking for raise
configure:38126: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:38132: $? = 0
configure:38150: result: yes
configure:38167: checking for raise declaration in signal.h
configure:38218: result: yes
configure:38245: checking for rand
configure:38301: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:38307: $? = 0
configure:38325: result: yes
configure:38342: checking for rand declaration in stdlib.h
configure:38393: result: yes
configure:38420: checking for random
configure:38476: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:38482: $? = 0
configure:38500: result: yes
configure:38517: checking for random declaration in stdlib.h
configure:38568: result: yes
configure:38595: checking for readlink
configure:38651: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:38657: $? = 0
configure:38675: result: yes
configure:38692: checking for readlink declaration in unistd.h
configure:38743: result: yes
configure:38770: checking for setbuf
configure:38826: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:38832: $? = 0
configure:38850: result: yes
configure:38867: checking for setbuf declaration in stdio.h
configure:38918: result: yes
configure:38945: checking for setlocale
configure:39001: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:39007: $? = 0
configure:39025: result: yes
configure:39042: checking for setlocale declaration in locale.h
configure:39093: result: yes
configure:39120: checking for setpgid
configure:39176: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:39182: $? = 0
configure:39200: result: yes
configure:39217: checking for setpgid declaration in unistd.h
configure:39268: result: yes
configure:39295: checking for setpgrp
configure:39375: result: yes
configure:39392: checking for setpgrp declaration in unistd.h
configure:39443: result: yes
configure:39470: checking for setpgrp2
configure:39526: gcc -o conftest -g -O2   conftest.c -lm  >&5
/tmp/cczBZ6oe.o: In function `main':
/home/student/CCPP/ddd-3.3.12/conftest.c:180: undefined reference to `setpgrp2'
collect2: ld returned 1 exit status
configure:39532: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "ddd"
| #define PACKAGE_TARNAME "ddd"
| #define PACKAGE_VERSION "3.3.12"
| #define PACKAGE_STRING "ddd 3.3.12"
| #define PACKAGE_BUGREPORT "ddd@gnu.org"
| #define PACKAGE "ddd"
| #define VERSION "3.3.12"
| #define HAVE_BOOL 1
| #define HAVE_EXPLICIT 1
| #define HAVE_MUTABLE 1
| #define HAVE_EXCEPTIONS 1
| #define HAVE_STD_EXCEPTIONS 1
| #define HAVE_NAMESPACE 1
| #define HAVE_TYPEINFO 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PRETTY_FUNCTION 1
| #define HAVE_ARRAY_OPERATOR_NEW 1
| #define HAVE_PLACEMENT_NEW 1
| #define HAVE_NEW_CASTS 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_BUILTIN_EXPECT 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define HAVE_STD_STREAMPOS 1
| #define HAVE_XP 1
| #define HAVE_MOTIF 1
| #define HAVE_XMUSEVERSION 1
| #define HAVE_XMINSTALLIMAGE 1
| #define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
| #define GETGROUPS_T gid_t
| #define RETSIGTYPE void
| #define SIGHANDLERARGS int
| #define GETPGRP_VOID 1
| #define SETPGRP_VOID 1
| #define STDC_HEADERS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_FCNTL_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_NETDB_H 1
| #define HAVE_PWD_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_TERMIO_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_IOCTL_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_SYSMACROS_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TERMIOS_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMEB_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_UTSNAME_H 1
| #define HAVE_SYS_PTRACE_H 1
| #define HAVE_EXCEPTION 1
| #define HAVE_STDEXCEPT 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_SYS_WAIT_H 1
| #define HAVE_DIRENT_H 1
| #define HAVE_LIBM 1
| #define HAVE_ASCTIME 1
| #define HAVE_ASCTIME_DECL 1
| #define HAVE_CLOCK 1
| #define HAVE_CLOCK_DECL 1
| #define HAVE_DIFFTIME 1
| #define HAVE_DIFFTIME_DECL 1
| #define HAVE_DUP2 1
| #define HAVE_DUP2_DECL 1
| #define HAVE_ENDPWENT 1
| #define HAVE_ENDPWENT_DECL 1
| #define HAVE_FCNTL 1
| #define HAVE_FCNTL_DECL 1
| #define HAVE_FTIME 1
| #define HAVE_FTIME_DECL 1
| #define HAVE_GETHOSTBYNAME 1
| #define HAVE_GETHOSTBYNAME_DECL 1
| #define HAVE_GETHOSTNAME 1
| #define HAVE_GETHOSTNAME_DECL 1
| #define HAVE_GETPT 1
| #define HAVE_GETPT_DECL 1
| #define HAVE_GETRLIMIT 1
| #define HAVE_GETRLIMIT_DECL 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETRUSAGE_DECL 1
| #define HAVE_GETWD 1
| #define HAVE_GETWD_DECL 1
| #define HAVE_GRANTPT 1
| #define HAVE_GRANTPT_DECL 1
| #define HAVE_HYPOT 1
| #define HAVE_HYPOT_DECL 1
| #define HAVE_IOCTL 1
| #define HAVE_IOCTL_DECL 1
| #define HAVE_LINK 1
| #define HAVE_LINK_DECL 1
| #define HAVE_LSTAT 1
| #define HAVE_LSTAT_DECL 1
| #define HAVE_MALLOC 1
| #define HAVE_MALLOC_DECL 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMCPY_DECL 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMSET_DECL 1
| #define HAVE_MKSTEMP 1
| #define HAVE_MKSTEMP_DECL 1
| #define HAVE_PCLOSE 1
| #define HAVE_PCLOSE_DECL 1
| #define HAVE_POPEN 1
| #define HAVE_POPEN_DECL 1
| #define HAVE_PTRACE 1
| #define HAVE_PTRACE_DECL 1
| #define HAVE_PTSNAME 1
| #define HAVE_PTSNAME_DECL 1
| #define HAVE_PUTENV 1
| #define HAVE_PUTENV_DECL 1
| #define HAVE_RAISE 1
| #define HAVE_RAISE_DECL 1
| #define HAVE_RAND 1
| #define HAVE_RAND_DECL 1
| #define HAVE_RANDOM 1
| #define HAVE_RANDOM_DECL 1
| #define HAVE_READLINK 1
| #define HAVE_READLINK_DECL 1
| #define HAVE_SETBUF 1
| #define HAVE_SETBUF_DECL 1
| #define HAVE_SETLOCALE 1
| #define HAVE_SETLOCALE_DECL 1
| #define HAVE_SETPGID 1
| #define HAVE_SETPGID_DECL 1
| #define HAVE_SETPGRP 1
| #define HAVE_SETPGRP_DECL 1
| /* end confdefs.h.  */
| /* Define setpgrp2 to an innocuous variant, in case <limits.h> declares setpgrp2.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define setpgrp2 innocuous_setpgrp2
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char setpgrp2 (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef setpgrp2
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char setpgrp2 ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_setpgrp2 || defined __stub___setpgrp2
| choke me
| #endif
| 
| int
| main ()
| {
| return setpgrp2 ();
|   ;
|   return 0;
| }
configure:39550: result: no
configure:39645: checking for setpwent
configure:39701: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:39707: $? = 0
configure:39725: result: yes
configure:39742: checking for setpwent declaration in pwd.h
configure:39793: result: yes
configure:39820: checking for setrlimit
configure:39876: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:39882: $? = 0
configure:39900: result: yes
configure:39917: checking for setrlimit declaration in sys/resource.h
configure:39968: result: yes
configure:39995: checking for setsid
configure:40051: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40057: $? = 0
configure:40075: result: yes
configure:40092: checking for setsid declaration in unistd.h
configure:40143: result: yes
configure:40170: checking for setvbuf
configure:40226: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40232: $? = 0
configure:40250: result: yes
configure:40267: checking for setvbuf declaration in stdio.h
configure:40318: result: yes
configure:40345: checking for sigblock
configure:40401: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40407: $? = 0
configure:40425: result: yes
configure:40442: checking for sigblock declaration in signal.h
configure:40493: result: yes
configure:40520: checking for sigprocmask
configure:40576: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40582: $? = 0
configure:40600: result: yes
configure:40617: checking for sigprocmask declaration in signal.h
configure:40668: result: yes
configure:40695: checking for sigsetmask
configure:40751: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40757: $? = 0
configure:40775: result: yes
configure:40792: checking for sigsetmask declaration in signal.h
configure:40843: result: yes
configure:40870: checking for sigsuspend
configure:40926: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:40932: $? = 0
configure:40950: result: yes
configure:40967: checking for sigsuspend declaration in signal.h
configure:41018: result: yes
configure:41045: checking for srand
configure:41101: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:41107: $? = 0
configure:41125: result: yes
configure:41142: checking for srand declaration in stdlib.h
configure:41193: result: yes
configure:41220: checking for srandom
configure:41276: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:41282: $? = 0
configure:41300: result: yes
configure:41317: checking for srandom declaration in stdlib.h math.h
configure:41368: result: yes
configure:41395: checking for stat
configure:41451: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:41457: $? = 0
configure:41475: result: yes
configure:41492: checking for stat declaration in sys/stat.h
configure:41543: result: yes
configure:41570: checking for strerror
configure:41626: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:41632: $? = 0
configure:41650: result: yes
configure:41667: checking for strerror declaration in string.h
configure:41718: result: yes
configure:41745: checking for strftime
configure:41801: gcc -o conftest -g -O2   conftest.c -lm  >&5
conftest.c:193: warning: conflicting types for built-in function 'strftime'
configure:41807: $? = 0
configure:41825: result: yes
configure:41842: checking for strftime declaration in time.h
configure:41893: result: yes
configure:41920: checking for strsignal
configure:41976: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:41982: $? = 0
configure:42000: result: yes
configure:42017: checking for strsignal declaration in string.h unistd.h
configure:42068: result: yes
configure:42095: checking for strtod
configure:42151: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:42157: $? = 0
configure:42175: result: yes
configure:42192: checking for strtod declaration in stdlib.h
configure:42243: result: yes
configure:42270: checking for strtol
configure:42326: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:42332: $? = 0
configure:42350: result: yes
configure:42367: checking for strtol declaration in stdlib.h
configure:42418: result: yes
configure:42445: checking for strtoul
configure:42501: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:42507: $? = 0
configure:42525: result: yes
configure:42542: checking for strtoul declaration in stdlib.h
configure:42593: result: yes
configure:42620: checking for symlink
configure:42676: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:42682: $? = 0
configure:42700: result: yes
configure:42717: checking for symlink declaration in unistd.h
configure:42768: result: yes
configure:42795: checking for tcdrain
configure:42851: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:42857: $? = 0
configure:42875: result: yes
configure:42892: checking for tcdrain declaration in termios.h
configure:42943: result: yes
configure:42970: checking for tcflow
configure:43026: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43032: $? = 0
configure:43050: result: yes
configure:43067: checking for tcflow declaration in termios.h
configure:43118: result: yes
configure:43145: checking for tcflush
configure:43201: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43207: $? = 0
configure:43225: result: yes
configure:43242: checking for tcflush declaration in termios.h
configure:43293: result: yes
configure:43320: checking for tcgetattr
configure:43376: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43382: $? = 0
configure:43400: result: yes
configure:43417: checking for tcgetattr declaration in termios.h
configure:43468: result: yes
configure:43495: checking for tcgetpgrp
configure:43551: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43557: $? = 0
configure:43575: result: yes
configure:43592: checking for tcgetpgrp declaration in unistd.h
configure:43643: result: yes
configure:43670: checking for tcgetsid
configure:43726: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43732: $? = 0
configure:43750: result: yes
configure:43767: checking for tcgetsid declaration in sys/termios.h
configure:43818: result: yes
configure:43845: checking for tcsendbreak
configure:43901: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:43907: $? = 0
configure:43925: result: yes
configure:43942: checking for tcsendbreak declaration in termios.h
configure:43993: result: yes
configure:44020: checking for tcsetattr
configure:44076: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44082: $? = 0
configure:44100: result: yes
configure:44117: checking for tcsetattr declaration in termios.h
configure:44168: result: yes
configure:44195: checking for tcsetpgrp
configure:44251: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44257: $? = 0
configure:44275: result: yes
configure:44292: checking for tcsetpgrp declaration in unistd.h
configure:44343: result: yes
configure:44370: checking for times
configure:44426: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44432: $? = 0
configure:44450: result: yes
configure:44467: checking for times declaration in sys/times.h
configure:44518: result: yes
configure:44545: checking for tmpfile
configure:44601: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44607: $? = 0
configure:44625: result: yes
configure:44642: checking for tmpfile declaration in stdio.h
configure:44693: result: yes
configure:44720: checking for uname
configure:44776: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44782: $? = 0
configure:44800: result: yes
configure:44817: checking for uname declaration in sys/utsname.h
configure:44868: result: yes
configure:44895: checking for unlink
configure:44951: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:44957: $? = 0
configure:44975: result: yes
configure:44992: checking for unlink declaration in unistd.h
configure:45043: result: yes
configure:45070: checking for unlockpt
configure:45126: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:45132: $? = 0
configure:45150: result: yes
configure:45167: checking for unlockpt declaration in stdlib.h
configure:45218: result: yes
configure:45245: checking for waitpid
configure:45301: gcc -o conftest -g -O2   conftest.c -lm  >&5
configure:45307: $? = 0
configure:45325: result: yes
configure:45342: checking for waitpid declaration in sys/wait.h
configure:45393: result: yes
configure:45408: checking for PATH_MAX definition in limits.h
configure:45435: g++ -c -g -O2  conftest.cpp >&5
configure:45441: $? = 0
configure:45457: result: yes
configure:45468: checking for _POSIX_PATH_MAX definition in limits.h
configure:45495: g++ -c -g -O2  conftest.cpp >&5
configure:45501: $? = 0
configure:45517: result: yes
configure:45528: checking for MAXPATHLEN definition in sys/param.h
configure:45555: g++ -c -g -O2  conftest.cpp >&5
configure:45561: $? = 0
configure:45577: result: yes
configure:45600: checking fixes needed for Mac OS X
configure:45624: result: no
configure:45726: g++ -E   conftest.cpp
configure:45732: $? = 0
configure:45893: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by ddd config.status 3.3.12, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on new-host-2

config.status:754: creating Makefile
config.status:754: creating ddd/Makefile
config.status:754: creating ddd/OldMakefile
config.status:894: WARNING:  ddd/OldMakefile.in seems to ignore the --datarootdir setting
config.status:754: creating ddd/vr.h
config.status:754: creating ddd/bld.h
config.status:754: creating ddd/Ddd
config.status:754: creating ddd/ddd.man
config.status:754: creating ddd/cfg.texi
config.status:754: creating ddd/.gdbinit
config.status:754: creating ddd.spec
config.status:754: creating themes/Makefile
config.status:754: creating vsllib/Makefile
config.status:754: creating ddd/config.h
config.status:1256: executing depfiles commands
config.status:1256: executing ddd/stamp-h commands
configure:47275:
configuration is done.  Type `make' to make DDD.
In case of trouble, please check the settings in the files generated
by `configure' - that is, `ddd/config.h' and `ddd/Makefile'.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_F77_set=
ac_cv_env_F77_value=
ac_cv_env_FFLAGS_set=
ac_cv_env_FFLAGS_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_XMKMF_set=
ac_cv_env_XMKMF_value=
ac_cv_env_YACC_set=
ac_cv_env_YACC_value=
ac_cv_env_YFLAGS_set=
ac_cv_env_YFLAGS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_f77_compiler_gnu=no
ac_cv_func__getpty=no
ac_cv_func_alloca=no
ac_cv_func_asctime=yes
ac_cv_func_clock=yes
ac_cv_func_connect=yes
ac_cv_func_difftime=yes
ac_cv_func_dup2=yes
ac_cv_func_endpwent=yes
ac_cv_func_fcntl=yes
ac_cv_func_ftime=yes
ac_cv_func_gethostbyname=yes
ac_cv_func_gethostname=yes
ac_cv_func_getpgrp=yes
ac_cv_func_getpgrp_void=yes
ac_cv_func_getpt=yes
ac_cv_func_getpty=no
ac_cv_func_getrlimit=yes
ac_cv_func_getrusage=yes
ac_cv_func_getwd=yes
ac_cv_func_grantpt=yes
ac_cv_func_hypot=yes
ac_cv_func_ioctl=yes
ac_cv_func_link=yes
ac_cv_func_lstat=yes
ac_cv_func_malloc=yes
ac_cv_func_memcpy=yes
ac_cv_func_memset=yes
ac_cv_func_mkstemp=yes
ac_cv_func_pclose=yes
ac_cv_func_popen=yes
ac_cv_func_ptrace=yes
ac_cv_func_ptsname=yes
ac_cv_func_putenv=yes
ac_cv_func_raise=yes
ac_cv_func_rand=yes
ac_cv_func_random=yes
ac_cv_func_readlink=yes
ac_cv_func_regcmp=no
ac_cv_func_remove=yes
ac_cv_func_setbuf=yes
ac_cv_func_setlocale=yes
ac_cv_func_setpgid=yes
ac_cv_func_setpgrp2=no
ac_cv_func_setpgrp=yes
ac_cv_func_setpgrp_void=yes
ac_cv_func_setpwent=yes
ac_cv_func_setrlimit=yes
ac_cv_func_setsid=yes
ac_cv_func_setvbuf=yes
ac_cv_func_shmat=yes
ac_cv_func_sigblock=yes
ac_cv_func_sigprocmask=yes
ac_cv_func_sigsetmask=yes
ac_cv_func_sigsuspend=yes
ac_cv_func_srand=yes
ac_cv_func_srandom=yes
ac_cv_func_stat=yes
ac_cv_func_strerror=yes
ac_cv_func_strftime=yes
ac_cv_func_strsignal=yes
ac_cv_func_strtod=yes
ac_cv_func_strtol=yes
ac_cv_func_strtoul=yes
ac_cv_func_symlink=yes
ac_cv_func_tcdrain=yes
ac_cv_func_tcflow=yes
ac_cv_func_tcflush=yes
ac_cv_func_tcgetattr=yes
ac_cv_func_tcgetpgrp=yes
ac_cv_func_tcgetsid=yes
ac_cv_func_tcsendbreak=yes
ac_cv_func_tcsetattr=yes
ac_cv_func_tcsetpgrp=yes
ac_cv_func_times=yes
ac_cv_func_tmpfile=yes
ac_cv_func_uname=yes
ac_cv_func_unlink=yes
ac_cv_func_unlockpt=yes
ac_cv_func_waitpid=yes
ac_cv_have_x='have_x=yes	ac_x_includes='\'''\''	ac_x_libraries='\'''\'''
ac_cv_header_alloca_h=yes
ac_cv_header_dirent_dirent_h=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_exception=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_libelf_h=no
ac_cv_header_locale_h=yes
ac_cv_header_malloc_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_netdb_h=yes
ac_cv_header_pwd_h=yes
ac_cv_header_stat_broken=no
ac_cv_header_stdc=yes
ac_cv_header_stdexcept=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_stropts_h=no
ac_cv_header_sys_int_types_h=no
ac_cv_header_sys_ioctl_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_ptrace_h=yes
ac_cv_header_sys_resource_h=yes
ac_cv_header_sys_socket_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_stropts_h=no
ac_cv_header_sys_sysmacros_h=yes
ac_cv_header_sys_termios_h=yes
ac_cv_header_sys_time_h=yes
ac_cv_header_sys_timeb_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_sys_utsname_h=yes
ac_cv_header_sys_vty_h=no
ac_cv_header_sys_wait_h=yes
ac_cv_header_termio_h=yes
ac_cv_header_termios_h=yes
ac_cv_header_time=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-unknown-linux-gnu
ac_cv_lib_ICE_IceConnectionNumber=yes
ac_cv_lib_X11_XOpenDisplay=yes
ac_cv_lib_Xext_XShapeQueryVersion=yes
ac_cv_lib_Xintl__Xlcmbcurmax=no
ac_cv_lib_Xm_Xm21InstallImage=no
ac_cv_lib_Xm_XmCreateOptionMenu=yes
ac_cv_lib_Xm_XmInstallImage=yes
ac_cv_lib_Xm_xmUseVersion=yes
ac_cv_lib_Xmu_XmuCvtStringToOrientation=yes
ac_cv_lib_Xp_XpSelectInput=yes
ac_cv_lib_Xt_XtToolkitInitialize=yes
ac_cv_lib_c_open=yes
ac_cv_lib_elf_elf_version=no
ac_cv_lib_gen_regcmp=no
ac_cv_lib_ipc_shmap=no
ac_cv_lib_lex='none needed'
ac_cv_lib_m_hypot=yes
ac_cv_lib_m_sin=yes
ac_cv_lib_mytinfo___tgetent=no
ac_cv_lib_ncurses___tgetent=yes
ac_cv_lib_y_yyerror=no
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_GREP=/bin/grep
ac_cv_path_SH=/bin/sh
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_COMPRESS=gzip
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_CXXCPP='g++ -E'
ac_cv_prog_DEBUGGER=gdb
ac_cv_prog_DIFF=diff
ac_cv_prog_GCORE=gcore
ac_cv_prog_LEX=flex
ac_cv_prog_LPR=lp
ac_cv_prog_M4=m4
ac_cv_prog_PERL=perl
ac_cv_prog_SED=sed
ac_cv_prog_TAR=gtar
ac_cv_prog_UNCOMPRESS=gzip
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_CXX=g++
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_cxx_g=yes
ac_cv_prog_f77_g=no
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=no
ac_cv_prog_make_make_set=yes
ac_cv_search_opendir='none required'
ac_cv_search_strerror='none required'
ac_cv_target=x86_64-unknown-linux-gnu
ac_cv_type_getgroups=gid_t
ac_cv_type_mode_t=yes
ac_cv_type_off_t=yes
ac_cv_type_pid_t=yes
ac_cv_type_signal=void
ac_cv_type_size_t=yes
ac_cv_type_uid_t=yes
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_CXX_dependencies_compiler_type=gcc3
ice_cv_athena_includes=no
ice_cv_cxx_isystem=yes
ice_cv_cxx_problematic_version=no
ice_cv_find_xext=yes
ice_cv_find_xmu=yes
ice_cv_find_xp=yes
ice_cv_have_array_operator_new=yes
ice_cv_have_asctime_decl=yes
ice_cv_have_attribute_noreturn=yes
ice_cv_have_bool=yes
ice_cv_have_builtin_expect=yes
ice_cv_have_clock_decl=yes
ice_cv_have_difftime_decl=yes
ice_cv_have_dup2_decl=yes
ice_cv_have_endpwent_decl=yes
ice_cv_have_exceptions=yes
ice_cv_have_explicit=yes
ice_cv_have_fcntl_decl=yes
ice_cv_have_ftime_decl=yes
ice_cv_have_gethostbyname_decl=yes
ice_cv_have_gethostname_decl=yes
ice_cv_have_getpt_decl=yes
ice_cv_have_getrlimit_decl=yes
ice_cv_have_getrusage_decl=yes
ice_cv_have_getwd_decl=yes
ice_cv_have_grantpt_decl=yes
ice_cv_have_hypot_decl=yes
ice_cv_have_ioctl_decl=yes
ice_cv_have_link_decl=yes
ice_cv_have_long_long=yes
ice_cv_have_lstat_decl=yes
ice_cv_have_malloc_decl=yes
ice_cv_have_maxpathlen=yes
ice_cv_have_memcpy_decl=yes
ice_cv_have_memset_decl=yes
ice_cv_have_mkstemp_decl=yes
ice_cv_have_mutable=yes
ice_cv_have_namespace=yes
ice_cv_have_new_casts=yes
ice_cv_have_path_max=yes
ice_cv_have_pclose_decl=yes
ice_cv_have_placement_new=yes
ice_cv_have_popen_decl=yes
ice_cv_have_posix_path_max=yes
ice_cv_have_pretty_function=yes
ice_cv_have_ptrace_decl=yes
ice_cv_have_ptrace_dumpcore=no
ice_cv_have_ptsname_decl=yes
ice_cv_have_putenv_decl=yes
ice_cv_have_raise_decl=yes
ice_cv_have_rand_decl=yes
ice_cv_have_random_decl=yes
ice_cv_have_readlink_decl=yes
ice_cv_have_setbuf_decl=yes
ice_cv_have_setlocale_decl=yes
ice_cv_have_setpgid_decl=yes
ice_cv_have_setpgrp_decl=yes
ice_cv_have_setpwent_decl=yes
ice_cv_have_setrlimit_decl=yes
ice_cv_have_setsid_decl=yes
ice_cv_have_setvbuf_decl=yes
ice_cv_have_sigblock_decl=yes
ice_cv_have_sigprocmask_decl=yes
ice_cv_have_sigsetmask_decl=yes
ice_cv_have_sigsuspend_decl=yes
ice_cv_have_srand_decl=yes
ice_cv_have_srandom_decl=yes
ice_cv_have_stat_decl=yes
ice_cv_have_std_exceptions=yes
ice_cv_have_std_streampos=yes
ice_cv_have_streampos=no
ice_cv_have_strerror_decl=yes
ice_cv_have_strftime_decl=yes
ice_cv_have_strsignal_decl=yes
ice_cv_have_strtod_decl=yes
ice_cv_have_strtol_decl=yes
ice_cv_have_strtoul_decl=yes
ice_cv_have_symlink_decl=yes
ice_cv_have_tcdrain_decl=yes
ice_cv_have_tcflow_decl=yes
ice_cv_have_tcflush_decl=yes
ice_cv_have_tcgetattr_decl=yes
ice_cv_have_tcgetpgrp_decl=yes
ice_cv_have_tcgetsid_decl=yes
ice_cv_have_tcsendbreak_decl=yes
ice_cv_have_tcsetattr_decl=yes
ice_cv_have_tcsetpgrp_decl=yes
ice_cv_have_times_decl=yes
ice_cv_have_tmpfile_decl=yes
ice_cv_have_typeinfo=yes
ice_cv_have_uname_decl=yes
ice_cv_have_unlink_decl=yes
ice_cv_have_unlockpt_decl=yes
ice_cv_have_waitpid_decl=yes
ice_cv_minimal_toc=no
ice_cv_motif_dialogs_own_selection_list=yes
ice_cv_motif_includes=
ice_cv_motif_libraries=
ice_cv_permissive=yes
ice_cv_prog_cc=yes
ice_cv_prog_cxx=yes
ice_cv_traditional_cpp='gcc -E'
ice_cv_translations=baseTranslations
ice_cv_trigraphs=yes
ice_cv_type_sig_handler_args=int
ice_cv_warn_effective_cxx=yes
ice_cv_warn_uninitialized=yes
ice_cv_x_permissive=no
ice_cv_xpm_includes=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_objdir=.libs
lt_cv_path_LD=/usr/bin/ld
lt_cv_path_LDCXX='/usr/bin/ld -m elf_x86_64'
lt_cv_path_NM='/usr/bin/nm -B'
lt_cv_path_SED=/bin/sed
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_c_o_F77=no
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_pic_works_F77=no
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=no
lt_cv_prog_compiler_static_works_CXX=no
lt_cv_prog_compiler_static_works_F77=no
lt_cv_prog_gnu_ld=yes
lt_cv_prog_gnu_ldcxx=yes
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[ 	]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ 	][ 	]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \([^ ]*\) \([^ ]*\)$/  {"\2", (lt_ptr) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^. .* \(.*\)$/extern int \1;/p'\'''
lt_cv_sys_lib_dlsearch_path_spec='/lib /usr/lib /usr/lib64/mysql /usr/lib64/qt-3.3/lib /usr/lib64/xulrunner '
lt_cv_sys_lib_search_path_spec='/usr/lib/gcc/x86_64-redhat-linux/4.4.7 /usr/lib64 /lib64'
lt_cv_sys_max_cmd_len=1966080
lt_lt_cv_prog_compiler_c_o='"yes"'
lt_lt_cv_prog_compiler_c_o_CXX='"yes"'
lt_lt_cv_prog_compiler_c_o_F77='"no"'
lt_lt_cv_sys_global_symbol_pipe='"sed -n -e '\''s/^.*[ 	]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[ 	][ 	]*\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\2 \\2/p'\''"'
lt_lt_cv_sys_global_symbol_to_c_name_address='"sed -n -e '\''s/^: \\([^ ]*\\) \$/  {\\\"\\1\\\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \\([^ ]*\\) \\([^ ]*\\)\$/  {\"\\2\", (lt_ptr) \\&\\2},/p'\''"'
lt_lt_cv_sys_global_symbol_to_cdecl='"sed -n -e '\''s/^. .* \\(.*\\)\$/extern int \\1;/p'\''"'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run aclocal-1.10'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run tar'
AR='ar'
AUTOCONF='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run autoconf'
AUTOHEADER='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run autoheader'
AUTOMAKE='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run automake-1.10'
AWK='gawk'
BIG_TOC=''
CC='gcc'
CCDEPMODE='depmode=gcc3'
CFLAGS='-g -O2'
COMPFACE=''
COMPRESS='gzip -c -9'
CPP='gcc -E'
CPPFLAGS=''
CPP_TRADITIONAL='gcc -E'
CXX='g++'
CXXCPP='g++ -E'
CXXDEBUG='-g'
CXXDEPMODE='depmode=gcc3'
CXXDYNAMIC_BINDING='-Bdynamic'
CXXFLAGS='-g -O2'
CXXLIBS=''
CXXOPT=' -O2'
CXXSTATIC_BINDING='-Bstatic'
CXXSTUFF=' -trigraphs'
CXXWARNINGS='-Wall -W -Wwrite-strings'
CYGPATH_W='echo'
DDD='DDD'
DEBUGGER='gdb'
DEBUGGER_OPTION=''
DEFS='-DHAVE_CONFIG_H'
DELETE_CR='cat'
DEPDIR='.deps'
DIFF='diff'
DSYMUTIL=''
Ddd='Ddd'
ECHO='echo'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EXEEXT=''
EXPIRES=''
F77='g77'
FFLAGS='-g'
GCORE='gcore'
GCORE_COMMAND='gcore -o @FILE@ @PID@'
GREP='/bin/grep'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
ISYSTEM='-isystem '
LDFLAGS=''
LEX='flex'
LEXLIB=''
LEX_OUTPUT_ROOT='lex.yy'
LFLAGS='-8'
LIBC='-lc'
LIBELF=''
LIBGEN=''
LIBM='-lm'
LIBNSL=''
LIBOBJS=''
LIBREADLINE=''
LIBRX=''
LIBS='-lm '
LIBSOCKET=''
LIBTERMCAP='-lncurses'
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIBY=''
LN_S='ln -s'
LPR='lp'
LTLIBOBJS=''
M4='m4'
MAKEINFO='${SHELL} /home/student/CCPP/ddd-3.3.12/missing --run makeinfo'
MINIMAL_TOC=''
NICKNAME='Dale Head'
NMEDIT=''
OBJEXT='o'
PACKAGE='ddd'
PACKAGE_BUGREPORT='ddd@gnu.org'
PACKAGE_NAME='ddd'
PACKAGE_STRING='ddd 3.3.12'
PACKAGE_TARNAME='ddd'
PACKAGE_VERSION='3.3.12'
PATH_SEPARATOR=':'
PERL='perl'
PERMISSIVE='-fpermissive'
PRINT_COMMAND='lp -c'
RANLIB='ranlib'
RPATH=''
RSH=''
SED='/bin/sed'
SET_MAKE=''
SH='/bin/sh'
SHELL='/bin/sh'
STRIP='strip'
TAR='gtar'
TRANSLATIONS='baseTranslations'
TRIGRAPHS='-trigraphs'
UNCOMPRESS='gzip -d -c'
VERSION='3.3.12'
WARN_EFFECTIVE_CXX='-Weffc++'
WARN_NO_EFFECTIVE_CXX='-Wno-effc++'
WARN_NO_UNINITIALIZED='-Wno-uninitialized'
WARN_UNINITIALIZED='-Wuninitialized'
X11_LIBS='-lX11'
XAW_LIBS=''
XBM2XFACE='false'
XEXT_LIBS='-lXext'
XFONTSEL='xfontsel'
XMKMF=''
XMU_LIBS='-lXmu'
XM_LIBS='-lXm'
XPM_LIBS=''
XP_LIBS='-lXp'
XS_DEBUG_INFO=''
XTERM='xterm'
XT_LIBS='-lXt'
X_CFLAGS=''
X_EXTRA_LIBS=''
X_LIBS=''
X_PERMISSIVE=''
X_PRE_LIBS=' -lSM -lICE'
YACC='bison -y'
YFLAGS=''
ac_ct_CC='gcc'
ac_ct_CXX='g++'
ac_ct_F77=''
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__fastdepCXX_FALSE='#'
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__quote=''
am__tar='${AMTAR} chof - "$$tardir"'
am__untar='${AMTAR} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-unknown-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
ddd='ddd'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-unknown-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='$(SHELL) /home/student/CCPP/ddd-3.3.12/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='/bin/mkdir -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target='x86_64-unknown-linux-gnu'
target_alias=''
target_cpu='x86_64'
target_os='linux-gnu'
target_vendor='unknown'

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_NAME "ddd"
#define PACKAGE_TARNAME "ddd"
#define PACKAGE_VERSION "3.3.12"
#define PACKAGE_STRING "ddd 3.3.12"
#define PACKAGE_BUGREPORT "ddd@gnu.org"
#define PACKAGE "ddd"
#define VERSION "3.3.12"
#define HAVE_BOOL 1
#define HAVE_EXPLICIT 1
#define HAVE_MUTABLE 1
#define HAVE_EXCEPTIONS 1
#define HAVE_STD_EXCEPTIONS 1
#define HAVE_NAMESPACE 1
#define HAVE_TYPEINFO 1
#define HAVE_LONG_LONG 1
#define HAVE_PRETTY_FUNCTION 1
#define HAVE_ARRAY_OPERATOR_NEW 1
#define HAVE_PLACEMENT_NEW 1
#define HAVE_NEW_CASTS 1
#define HAVE_ATTRIBUTE_NORETURN 1
#define HAVE_BUILTIN_EXPECT 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define HAVE_STD_STREAMPOS 1
#define HAVE_XP 1
#define HAVE_MOTIF 1
#define HAVE_XMUSEVERSION 1
#define HAVE_XMINSTALLIMAGE 1
#define MOTIF_DIALOGS_OWN_SELECTION_LIST 1
#define GETGROUPS_T gid_t
#define RETSIGTYPE void
#define SIGHANDLERARGS int
#define GETPGRP_VOID 1
#define SETPGRP_VOID 1
#define STDC_HEADERS 1
#define HAVE_ALLOCA_H 1
#define HAVE_FCNTL_H 1
#define HAVE_LOCALE_H 1
#define HAVE_MALLOC_H 1
#define HAVE_NETDB_H 1
#define HAVE_PWD_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_TERMIO_H 1
#define HAVE_TERMIOS_H 1
#define HAVE_UNISTD_H 1
#define HAVE_SYS_IOCTL_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_RESOURCE_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_SYSMACROS_H 1
#define HAVE_SYS_SOCKET_H 1
#define HAVE_SYS_TERMIOS_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_SYS_TIMEB_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_UTSNAME_H 1
#define HAVE_SYS_PTRACE_H 1
#define HAVE_EXCEPTION 1
#define HAVE_STDEXCEPT 1
#define TIME_WITH_SYS_TIME 1
#define HAVE_SYS_WAIT_H 1
#define HAVE_DIRENT_H 1
#define HAVE_LIBM 1
#define HAVE_ASCTIME 1
#define HAVE_ASCTIME_DECL 1
#define HAVE_CLOCK 1
#define HAVE_CLOCK_DECL 1
#define HAVE_DIFFTIME 1
#define HAVE_DIFFTIME_DECL 1
#define HAVE_DUP2 1
#define HAVE_DUP2_DECL 1
#define HAVE_ENDPWENT 1
#define HAVE_ENDPWENT_DECL 1
#define HAVE_FCNTL 1
#define HAVE_FCNTL_DECL 1
#define HAVE_FTIME 1
#define HAVE_FTIME_DECL 1
#define HAVE_GETHOSTBYNAME 1
#define HAVE_GETHOSTBYNAME_DECL 1
#define HAVE_GETHOSTNAME 1
#define HAVE_GETHOSTNAME_DECL 1
#define HAVE_GETPT 1
#define HAVE_GETPT_DECL 1
#define HAVE_GETRLIMIT 1
#define HAVE_GETRLIMIT_DECL 1
#define HAVE_GETRUSAGE 1
#define HAVE_GETRUSAGE_DECL 1
#define HAVE_GETWD 1
#define HAVE_GETWD_DECL 1
#define HAVE_GRANTPT 1
#define HAVE_GRANTPT_DECL 1
#define HAVE_HYPOT 1
#define HAVE_HYPOT_DECL 1
#define HAVE_IOCTL 1
#define HAVE_IOCTL_DECL 1
#define HAVE_LINK 1
#define HAVE_LINK_DECL 1
#define HAVE_LSTAT 1
#define HAVE_LSTAT_DECL 1
#define HAVE_MALLOC 1
#define HAVE_MALLOC_DECL 1
#define HAVE_MEMCPY 1
#define HAVE_MEMCPY_DECL 1
#define HAVE_MEMSET 1
#define HAVE_MEMSET_DECL 1
#define HAVE_MKSTEMP 1
#define HAVE_MKSTEMP_DECL 1
#define HAVE_PCLOSE 1
#define HAVE_PCLOSE_DECL 1
#define HAVE_POPEN 1
#define HAVE_POPEN_DECL 1
#define HAVE_PTRACE 1
#define HAVE_PTRACE_DECL 1
#define HAVE_PTSNAME 1
#define HAVE_PTSNAME_DECL 1
#define HAVE_PUTENV 1
#define HAVE_PUTENV_DECL 1
#define HAVE_RAISE 1
#define HAVE_RAISE_DECL 1
#define HAVE_RAND 1
#define HAVE_RAND_DECL 1
#define HAVE_RANDOM 1
#define HAVE_RANDOM_DECL 1
#define HAVE_READLINK 1
#define HAVE_READLINK_DECL 1
#define HAVE_SETBUF 1
#define HAVE_SETBUF_DECL 1
#define HAVE_SETLOCALE 1
#define HAVE_SETLOCALE_DECL 1
#define HAVE_SETPGID 1
#define HAVE_SETPGID_DECL 1
#define HAVE_SETPGRP 1
#define HAVE_SETPGRP_DECL 1
#define HAVE_SETPWENT 1
#define HAVE_SETPWENT_DECL 1
#define HAVE_SETRLIMIT 1
#define HAVE_SETRLIMIT_DECL 1
#define HAVE_SETSID 1
#define HAVE_SETSID_DECL 1
#define HAVE_SETVBUF 1
#define HAVE_SETVBUF_DECL 1
#define HAVE_SIGBLOCK 1
#define HAVE_SIGBLOCK_DECL 1
#define HAVE_SIGPROCMASK 1
#define HAVE_SIGPROCMASK_DECL 1
#define HAVE_SIGSETMASK 1
#define HAVE_SIGSETMASK_DECL 1
#define HAVE_SIGSUSPEND 1
#define HAVE_SIGSUSPEND_DECL 1
#define HAVE_SRAND 1
#define HAVE_SRAND_DECL 1
#define HAVE_SRANDOM 1
#define HAVE_SRANDOM_DECL 1
#define HAVE_STAT 1
#define HAVE_STAT_DECL 1
#define HAVE_STRERROR 1
#define HAVE_STRERROR_DECL 1
#define HAVE_STRFTIME 1
#define HAVE_STRFTIME_DECL 1
#define HAVE_STRSIGNAL 1
#define HAVE_STRSIGNAL_DECL 1
#define HAVE_STRTOD 1
#define HAVE_STRTOD_DECL 1
#define HAVE_STRTOL 1
#define HAVE_STRTOL_DECL 1
#define HAVE_STRTOUL 1
#define HAVE_STRTOUL_DECL 1
#define HAVE_SYMLINK 1
#define HAVE_SYMLINK_DECL 1
#define HAVE_TCDRAIN 1
#define HAVE_TCDRAIN_DECL 1
#define HAVE_TCFLOW 1
#define HAVE_TCFLOW_DECL 1
#define HAVE_TCFLUSH 1
#define HAVE_TCFLUSH_DECL 1
#define HAVE_TCGETATTR 1
#define HAVE_TCGETATTR_DECL 1
#define HAVE_TCGETPGRP 1
#define HAVE_TCGETPGRP_DECL 1
#define HAVE_TCGETSID 1
#define HAVE_TCGETSID_DECL 1
#define HAVE_TCSENDBREAK 1
#define HAVE_TCSENDBREAK_DECL 1
#define HAVE_TCSETATTR 1
#define HAVE_TCSETATTR_DECL 1
#define HAVE_TCSETPGRP 1
#define HAVE_TCSETPGRP_DECL 1
#define HAVE_TIMES 1
#define HAVE_TIMES_DECL 1
#define HAVE_TMPFILE 1
#define HAVE_TMPFILE_DECL 1
#define HAVE_UNAME 1
#define HAVE_UNAME_DECL 1
#define HAVE_UNLINK 1
#define HAVE_UNLINK_DECL 1
#define HAVE_UNLOCKPT 1
#define HAVE_UNLOCKPT_DECL 1
#define HAVE_WAITPID 1
#define HAVE_WAITPID_DECL 1
#define HAVE_PATH_MAX 1
#define HAVE_POSIX_PATH_MAX 1
#define HAVE_MAXPATHLEN 1
#define WITH_RUNTIME_REGEX 0
#define RUNTIME_REGEX 0

configure: exit 0
